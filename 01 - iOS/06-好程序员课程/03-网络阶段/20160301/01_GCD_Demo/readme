
【GCD】

1.什么是GCD?
为并发代码在多核硬件(ios(iphone4s),mac os)上高效执行多线程代码而生的技术
弥补了NSThread难于管理的问题
//Grand Central Dispatch(多线程优化技术)或称GCD，是一套底层API，提供了新的模式编写并发执行的程序。允许将一个程序切分为多个单一任务，然后提交到工作队列并并发地或者串行地执行。

2.什么是Queue队列?
GCD使用了队列概念,已经很好的解决了NSThread难于管理的问题,队列实际上就是一个数组的概念,通常我们把要执行的任务,放到一个队列中去管理
//GCD采用队列的方式管理线程，不仅可以管理多线程，并发的任务，设置主线程，也通过任务队列的方式进行管理。
//所以说GCD的队列是任务队列，而不是线程队列。

3.什么是串行队列?
依次完成每一个任务

4.什么是并行队列?
好像所有的任务都是在同一时间执行的

5.mainqueue(主队列)串行队列,全局队列(Global Queue),自己创建队列


CGD存在的问题
1.纯c的代码,让很多面向对象程序员头疼
2.虽然已经很好的解决了NSThread难于管理的问题,但是还不是很好,当程序在某一个时间点上如果需要执行很多个好时操作,也会出现创建很多个线程的问题,导致系统性能出现问题

优点：
通过GCD，开发者不用再直接跟线程打交道了，只需要向队列中添加block代码即可，GCD在后端管理着一个线程池。GCD不仅决定着哪个线程(block)将被执行，它还根据可用的系统资源对线程池中的线程进行管理——这样可以不通过开发者来集中管理线程，缓解大量线程的创建，做到了让开发者远离线程的管理。
缺点：
虽然GCD是稍微偏底层的一个API，但是使用起来非常的简单。不过这也容易使开发者忘记并发编程中的许多注意事项和陷阱。



一、Dispatch Queues
    1.The main queue(主队列，串行执行)：
    提交到main queue的任务将在主线程执行。main queue可以调用dispatch_get_main_queue()来获得。因为main queue是与主线程相关的，所以这是一个串行队列。
    2.Global queues(全局队列，并行执行)：
    全局队列是并发队列，并由整个进程共享。进程中存在三个全局队列，可以调用dispatch_get_global_queue函数，传入优先级来访问队列。
    3.用户队列(用户队列，串行执行)：
    用户队列(GCD中对这种队列没有特定的名词来描述，姑且如此称之)可以使用dispatch_queue_create函数创建队列。这些队列是串行执行的。

PS:
还有一些其他的东西不需要了解的，工作基本不用，面试就说知道这个东西，但是不常用，如果需要可以细查查
讲这些只会加大我们的负担，影响学习心情和进度，意义不大

比如GCD的内存管理
比如GCD的线程阻碍等。。。

